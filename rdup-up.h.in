#ifndef _RDUP_UP_H
#define _RDUP_UP_H

#include <glib.h>

#include "config.h"

#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>
#include <unistd.h>
#include <string.h>
#include <ctype.h>
#include <time.h>
#include <glob.h>
#include <fcntl.h>
#include <signal.h>
#include <dirent.h>
#include <libgen.h>
#include <syslog.h>
#include <errno.h>
#include <utime.h>
#include <pwd.h>
#include <grp.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/wait.h>

#ifdef HAVE_SELECT_H
#include <select.h>
#endif /* HAVE_SELECT_H */

#ifdef HAVE_GETTEXT
#include <libintl.h>
#include <locale.h>
#define _(String) gettext (String)
#define gettext_noop(String) String
#define N_(String) gettext_noop (String)
#else
#define _(String) String
#endif /* HAVE_GETTEXT */

#include "entry.h"
#include "common.h"
#define VERSION     "@PACKAGE_VERSION@"

/* #define LIST_MINSIZE   15 */

/* signal.c */
void signal_abort(int);

/* msg.c */
void msg(const char *, ...);
void msgd(const char *, int, const char *, ...);

/* getdelim.c */
ssize_t rdup_getdelim(char **, size_t *, int, FILE *);

/* usage-up.c */
void usage_up(FILE *);

/* entry.c */
struct rdup * parse_entry(char *, size_t);
gint rdup_write_table(struct rdup *, FILE *);

/* link.c */
gchar * slink(struct rdup *);

/* abspath.c */
char * abspath(char *);

/* rm.c */
gboolean rm(gchar *);

/* fs-up.c */
gboolean mk_hlink(GSList *);
gboolean mk_obj(FILE *, char *, struct rdup *, GHashTable *, GHashTable *);

/* strippath.c */
void strippath(struct rdup *);
void strippathname(struct rdup *);

/* names.c */
uid_t lookup_uid(GHashTable *, gchar *, uid_t);
gid_t lookup_gid(GHashTable *, gchar *, gid_t);

/* mkpath.c */
int mkpath(const char *, mode_t);

/* dir.c */
struct stat * dir_write(gchar *);
void dir_restore(gchar *, struct stat *);
gchar *dir_parent(gchar *);
void dir_mkpath(gchar *);


/* chown.c */
void chown_write(gchar *dir, gchar *base, uid_t u, gchar *user, gid_t g, gchar *group);                    

#endif  /* _RDUP_UP_H */
